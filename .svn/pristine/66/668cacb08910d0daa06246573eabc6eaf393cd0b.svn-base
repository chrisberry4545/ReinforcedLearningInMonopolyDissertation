package Model;

import java.util.*;
import java.awt.Color;

/**
 * A site a player can buy. An example of this would be Mayfair.
 * @author chris
 */
public class Site extends Property {
    
    private int noOfHouses;
    private int noOfHotels;
    private int[] rentRates;
    private int houseCost;
    private Color color;
    
    private final int maxHouses = 4;
    private final int maxHotels = 1;
    
    
    public Site(String name, int intialCost, int mortgageRate,
            int[] rentPerNumberOfHouses, int houseCost, Color color) {
        super(name, intialCost, mortgageRate);
        if (rentPerNumberOfHouses.length < 6) {
            System.err.println(name + " has too few house values");
        }
        this.noOfHouses = 0;
        this.noOfHotels = 0;
        this.rentRates = rentPerNumberOfHouses;
        this.houseCost = houseCost;
        this.color = color;
        SiteGroup.getInstance().addSite(color, this);
    }
    
    /**
     * Returns the rent of the property dependent on the number of hotels/houses.
     * @param diceRoll the amount the player rolled to land here.
     * @return rent of property.
     */
    @Override
    public int getRent(int diceRoll) {
        if (noOfHotels == 1) {
            return rentRates[rentRates.length-1];
        } else {
            return rentRates[noOfHouses];
        }      
    }
    
    /**
     * Adds one house and returns true if this was successful. It will be
     * unsuccessful if there are too many houses.
     * @return true if successful, false if unsuccessful.
     */
    public boolean addHouse() {
        if (noOfHouses < maxHouses) {
            this.noOfHouses++;
            return true;
        }
        return false;
    }
    
    /**
     * Exchanges the houses (if there are enough) for a hotel. If there aren't
     * enough houses, false is returned.
     * @return true if successful, false if unsuccessful.
     */
    public boolean exchangeForHotel() {
        if (noOfHouses == maxHouses) {
            noOfHouses = 0;
            noOfHotels++;
            return true;
        }
        return false;
    }
    
}
