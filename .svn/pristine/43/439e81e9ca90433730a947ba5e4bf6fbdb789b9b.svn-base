/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package PlayerTests.TDPlayerTests;

import Model.Game;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import static org.junit.Assert.*;
import Model.Players.AbstractTDPlayer;
import Model.Board;
import java.util.List;
import Model.Spaces.Space;

/**
 *
 * @author Chris
 */
public class PropertyCombinationTest extends TDTestEnvirorment{
    
    public PropertyCombinationTest() {
    }
    
    @BeforeClass
    public static void setUpClass() {
    }
    
    @AfterClass
    public static void tearDownClass() {
    }
    
    @Before
    public void setUp() {
    }
    
    @After
    public void tearDown() {
    }

    @Test
    public void propertyComboTest() {
        super.setUpTDTestEnvirorment();
        if (AbstractTDPlayer.getAllCombinationsOfSpaces(tdPlayerOne) == null) {
            System.out.println("Test successful with no properties");
        }
        Board board = Game.getInstance().getBoard();
        //This is max site limit, 18.
        int numSitesToUse = board.getAllSites().size() - 4;
        for (int i = 0; i < numSitesToUse; i++) {
            board.getAllSites().get(i).setOwner(tdPlayerOne);
        }
//        for (int i = 0; i < board.getAllStations().size(); i++) {
//            board.getAllStations().get(i).setOwner(tdPlayerOne);
//        }
//        for (int i = 0; i < board.getAllUtilities().size(); i++) {
//            board.getAllUtilities().get(i).setOwner(tdPlayerOne);
//        }
        
        AbstractTDPlayer.getAllCombinationsOfSpaces(tdPlayerOne);
        
        System.out.println("Number of sites used: " + numSitesToUse);
        
    }

}
