/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package CardTests;

import Model.Cards.Card;
import Model.Cards.GeneralRepairs;
import Model.Cards.GetOutOfJailCard;
import java.util.List;
import java.util.ArrayList;
import Model.Spaces.Site;
import Model.Spaces.Space;
import Model.Game;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import static org.junit.Assert.*;

/**
 *
 * @author chris
 */
public class MakeRepairsCardTest extends CardTestTemplate{
    
    public MakeRepairsCardTest() {
    }
    
    @BeforeClass
    public static void setUpClass() {
    }
    
    @AfterClass
    public static void tearDownClass() {
    }
    
    // TODO add test methods here.
    // The methods must be annotated with annotation @Test. For example:
    //
     @Test
     public void testRepairs() {
         runRepairTest(false, Game.PLAYER_STARTING_MONEY, 25, 100);
         runRepairTest(false, 0, 25, 100);
         for (int i = 0; i < 25; i++) {
            runRepairTest(true, Game.PLAYER_STARTING_MONEY, 25, 100);
            runRepairTest(true, 0, 25, 100);
         }         
         
     }
     
     private void runRepairTest(boolean includeRandomHouses, int startingMoney,
             int houseCost, int hotelCost) {
         if (includeRandomHouses) {
             super.setUpGameWithRandomrOfPropertysAndHouses(
                 startingMoney, 1);
         } else {
             super.setUpGameWithPlayer(startingMoney, 1);
         }
         makeRepairsTest(houseCost,hotelCost);
     }
     
     
     public void makeRepairsTest(int houseCost, int hotelCost) {
         Card card = new Card("Make general repairs on all your property:"
                + " For each house pay $25, for each hotel pay $100.",
                new GeneralRepairs(houseCost, hotelCost), true);
         int currentMoney = testPlayer.getMoney();
         int startingMortgageValue = 0;
         for (Space space : testPlayer.getProperties()) {
             startingMortgageValue += space.getFullMortgageValue();
         }
         //Calculate the number of houses and hotels owned by the player.
         int numHouses = 0;
         int numHotels = 0;
         for (Space space : testPlayer.getPropertiesWithHouses()) {
             Site site =(Site)space;
             if (site.getHouses() == Site.MAX_HOUSES) {
                 numHotels++;
             } else {
                 numHouses += site.getHouses();
             }
         }
         card.getAction().performAction(testPlayer);
         int moneyAfterCard = testPlayer.getMoney();
         int repairsCost = houseCost * numHouses + hotelCost * numHotels;
         int finalMortgageValue = 0;
         for (Space space : testPlayer.getProperties()) {
             finalMortgageValue += space.getFullMortgageValue();
         }
         int mortgageValueDifference =
                 startingMortgageValue - finalMortgageValue;
         int correctResult = currentMoney - repairsCost + mortgageValueDifference;
         if (correctResult == moneyAfterCard ) {
             System.out.println("Test Succesful: The player started with " +
                     currentMoney + " and after the repair cost of " +
                     repairsCost + " and selling " + mortgageValueDifference +
                     " worth of sites and housing, "
                     + " is left with " + moneyAfterCard + ".");
         } else {
             fail("The player is left with " + moneyAfterCard  + " instead of the"
             + " " + correctResult + " the player should have been left with \n "
                     + " for " + numHouses + " houses and " + numHotels +
                     " hotels and after mortgaging to a value of " +
                     mortgageValueDifference + ".");
         }
     }

}
