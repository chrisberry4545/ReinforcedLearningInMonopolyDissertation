package Model;

import java.util.*;
import java.awt.Color;

/**
 * A site a player can buy. An example of this would be Mayfair.
 * @author chris
 */
public class Site extends Space {
    
    public static final int HOUSE_ADDED = 0;
    public static final int TOO_MANY_HOUSES = 1;
    public static final int MUST_BUY_HOUSES_ON_OTHER_PROPERTIES = 2;
    
    private int noOfHouses;
    private int[] rentRates;
    private int houseCost;
    private Color color;
    
    private final int maxHouses = 5;
    
    
    public Site(String name, int intialCost, int mortgageRate,
            int[] rentPerNumberOfHouses, int houseCost, Color color) {
        super(name, intialCost, mortgageRate);
        if (rentPerNumberOfHouses.length <= maxHouses) {
            System.err.println(name + " has too few house values");
        }
        this.noOfHouses = 0;
        this.rentRates = rentPerNumberOfHouses;
        this.houseCost = houseCost;
        this.color = color;
        SiteGroup.getInstance().addSite(this);
    }
    
    /**
     * Returns the rent of the property dependent on the number of hotels/houses.
     * @param diceRoll the amount the player rolled to land here.
     * @return rent of property.
     */
    @Override
    public int getRent(int diceRoll) {
        return rentRates[noOfHouses];
    }
    
    /**
     * Adds one house and returns 0 if this was successful. It will be
     * unsuccessful if there are too many houses and 1 is returned.
     * Also checks the number of houses on other properties in the group
     * is appropriate.
     * @return true if successful, false if unsuccessful.
     */
    public int addHouse() {    
        if (!SiteGroup.getInstance().otherPropertiesHaveEnoughHouses(this)) {
            return MUST_BUY_HOUSES_ON_OTHER_PROPERTIES;
        } 
        if (noOfHouses < maxHouses) {
            this.noOfHouses++;
            return HOUSE_ADDED;
        } else {
            return TOO_MANY_HOUSES;
        } 
    }
    
    /**
     * Gets the number of houses. 5 Houses means the site has a hotel
     * built upon it.
     * @return The number of houses.
     */
    public int getHouses() {
        return noOfHouses;
    }
    /**
     * Return the color of the property.
     * @return the color of the property.
     */
    public Color getColor() {
        return color;
    }
    
    /**
     * Gets the maximum amount of houses which can be built on the property.
     * @return the maximum number of houses which can be built on the property.
     */
    public int getMaxHouses() {
        return maxHouses;
    }
    
    /**
     * Gets the cost of adding a new house.
     * @return Gets the cost of adding a new house.
     */
    public int getHouseCost() {
        return houseCost;
    }
    
}
